
- use git smudge/clean filters to hash/download or fetch the files

- can determine the top-level of a repo via `git rev-parse --show-toplevel`

- force the re-cleaning of everything via `git checkout -f HEAD -- .`
    - need to make sure that the repo is currently clean, via
      `git status -uno --porcelain`


git xblob init

    Setup the filters, run `.gitxblobconfig` through `git config`, and force a re-clean.

    xblob.get http://files.mikeboers.com/renderlog
    xblob.put scp:mikeboers.com:/srv/mikeboers.com/files/renderlog

git xblob add <path>
    Add the given path to a .gitattributes file, and force a git-add
    (if that is nessesary)

git xblob sync
    Upload everything

git xblob smudge
    Calculate the hash of the file, and move it to '.git/xblobs/<prefix>/<hash>'.

    Don't do it if it looks like 'git-xblob-<hash>'

    Return the hash.

git xblob clean

    Make sure it looks like `git-xblob-<hash>`, download it if it doesn't exist,
    and then return that file.

---

This could be written so that the transports are their own commands, e.g.:

    git-xblob-get-http $digest $geturl > $xblob_path
    git-xblob-sync-rsync $xblob_dir $puturl






